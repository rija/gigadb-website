[name_gigadb_server_staging]

# do not add any IP address here as it is dynamically managed using terraform-inventory

[name_gigadb_server_live]

# do not add any IP address here as it is dynamically managed using terraform-inventory

[name_rds_server_staging]

# do not add any IP address here as it is dynamically managed using terraform-inventory

[name_rds_server_live]

# do not add any IP address here as it is dynamically managed using terraform-inventory

[all:vars]

gitlab_url = "https://gitlab.com/api/v4/projects/{{ lookup('ini', 'gitlab_project type=properties file=ansible.properties') | urlencode | regex_replace('/','%2F') }}"
ansible_ssh_private_key_file = "{{ lookup('ini', 'ssh_private_key_file type=properties file=ansible.properties') }}"
ansible_user = "centos"
ansible_become = "true"
database_bootstrap = "../../../../sql/production_like.pgdmp"
gitlab_private_token = "{{ lookup('ini', 'gitlab_private_token type=properties file=ansible.properties') }}"
gigadb_environment = "{{ lookup('ini', 'deployment_target type=properties file=ansible.properties') }}"

pg_host = "{{ lookup('ini', 'gigadb_db_host type=properties file=ansible.properties') }}"
pg_user = "{{ lookup('ini', 'gigadb_db_user type=properties file=ansible.properties') }}"
pg_password = "{{ lookup('ini', 'gigadb_db_password type=properties file=ansible.properties') }}"
pg_database = "{{ lookup('ini', 'gigadb_db_database type=properties file=ansible.properties') }}"
pg_db_dump_file = "{{ lookup('ini', 'gigadb_db_dump_file type=properties file=ansible.properties') }}"
fuw_db_user = "{{ lookup('ini', 'fuw_db_user type=properties file=ansible.properties') }}"
fuw_db_password = "{{ lookup('ini', 'fuw_db_password type=properties file=ansible.properties') }}"
fuw_db_database = "{{ lookup('ini', 'fuw_db_database type=properties file=ansible.properties') }}"
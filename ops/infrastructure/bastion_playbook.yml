---
# Use bastion server to restore PostgreSQL database on RDS instance

- name: Restore PostgreSQL database on RDS instance using pg_restore
  hosts: name_bastion_server_staging:name_bastion_server_live

  tasks:
  - name: Test pg_isready can connect to RDS instance
    ansible.builtin.command: "/usr/pgsql-9.6/bin/pg_isready -h {{ pg_host }}"
    register: pg_isready
  - debug: msg="{{ pg_isready.stdout }}"

  - name: Get files in files-url-updater sql folder
    find:
      paths: "../../../../gigadb/app/tools/files-url-updater/sql"
      use_regex: yes
      patterns: "^gigadbv3*"
      file_type: file
    register: found_files
    delegate_to: localhost

  - name: Get path to latest back up file
    set_fact:
      latest_backup_file: "{{ (found_files.files | sort(attribute='mtime') | last).path }}"
    delegate_to: localhost

  - debug: msg="latest_backup_file is {{ latest_backup_file }}"

  - name: Copy pgdmp file to bastion server
    ansible.builtin.copy:
      src: {{ latest_backup_file }}
      dest: "/home/centos/database_bootstrap.pgdmp"
      owner: centos
      group: centos

  - name: Restore database on RDS instance using dump file
    shell: "export PGPASSWORD='{{ pg_password }}'; pg_restore -c --if-exists -h {{ pg_host }} -p 5432 -d {{ pg_database }} -U {{ pg_user }} /home/centos/database_bootstrap.pgdmp"
    register: pg_restore
  - debug: msg="{{ pg_restore.stdout }}"

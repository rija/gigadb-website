GigaReviewTest:
  variables:
    COMPOSE_FILE: docker-compose.yml
    REPO_NAME: $CI_PROJECT_NAME
    REVIEW_ENV: ci
    POSTGRES_MAJOR_VERSION: 12
    GROUP_VARIABLES_URL: "https://gitlab.com/api/v4/groups/gigascience/variables?per_page=100"
    FORK_VARIABLES_URL: "https://gitlab.com/api/v4/groups/3501869/variables"
    PROJECT_VARIABLES_URL: "https://gitlab.com/api/v4/projects/gigascience%2Fforks%2F$REPO_NAME/variables"
    MISC_VARIABLES_URL: "https://gitlab.com/api/v4/projects/gigascience%2Fcnhk-infra/variables"
  stage: test
  script:
    - env | grep -iE "(REVIEW_ENV|REPO_NAME|POSTGRES_MAJOR_VERSION|POSTGRES_DB|POSTGRES_USER|POSTGRES_PASSWORD|GROUP_VARIABLES_URL|FORK_VARIABLES_URL|PROJECT_VARIABLES_URL|MISC_VARIABLES_URL|GITLAB_PRIVATE_TOKEN)"| tee gigareview/.env
    - cd gigareview
    - ./up.sh
    - "./tests/unit_runner && ./tests/functional_runner && ./tests/acceptance_runner"
  environment:
    name: dev
  artifacts:
    paths:
      - gigareview/.env
      - gigareview/.secrets
      - gigareview/environments
      - .env
      - .secrets
      - .ci_env
    when: always
    expire_in: 3 days

GigaReviewBuildStaging:
  stage: staging build
  variables:
    COMPOSE_FILE: docker-compose.yml
    REPO_NAME: $CI_PROJECT_NAME
    REVIEW_ENV: staging
    GROUP_VARIABLES_URL: "https://gitlab.com/api/v4/groups/gigascience/variables?per_page=100"
    FORK_VARIABLES_URL: "https://gitlab.com/api/v4/groups/3501869/variables"
    PROJECT_VARIABLES_URL: "https://gitlab.com/api/v4/projects/gigascience%2Fforks%2F$REPO_NAME/variables"
    MISC_VARIABLES_URL: "https://gitlab.com/api/v4/projects/gigascience%2Fcnhk-infra/variables"
  script:
    - env | grep -iE "(REVIEW_ENV|REPO_NAME|POSTGRES_MAJOR_VERSION|POSTGRES_DB|POSTGRES_USER|POSTGRES_PASSWORD|GROUP_VARIABLES_URL|FORK_VARIABLES_URL|PROJECT_VARIABLES_URL|MISC_VARIABLES_URL|GITLAB_PRIVATE_TOKEN)"| tee gigareview/.env
    - cd gigareview
    - ls -alrt
    - docker-compose -f docker-compose.production.yml run --rm config #run generate_config to create configuration file with variables from staging
    - echo "All" | docker-compose run --rm console ./init --env=staging #run Yii2 init script to move configuration files into place
    - docker-compose -f docker-compose.production.yml build production_console # build production container from the production docker file
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com # log in to Gitlab so we can push the container image there
    - docker tag ${CI_PROJECT_NAME}_production_console:latest registry.gitlab.com/$CI_PROJECT_PATH/production_review_cli:$REVIEW_ENV
    - docker push registry.gitlab.com/$CI_PROJECT_PATH/production_review_cli:$REVIEW_ENV
  dependencies: []
  environment:
    name: staging
  artifacts:
    paths:
      - gigareview/.env
      - gigareview/.secrets
      - gigareview/environments
      - gigareview/console/config
      - gigareview/common/config
      - .env
      - .secrets
      - .ci_env
    when: always
    expire_in: 3 days

